// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model Person {
  id          String        @id @default(uuid()) @db.Char(36)
  firstName   String
  lastName    String
  gender      Gender
  dateOfBirth DateTime      @db.Date
  country     String
  city        String
  zipCode     String
  phone       String
  mail        String
  User        User?
  Participant Participant[]
}

enum UserRole {
  COMPETITOR
  ORGANIZER
  TIMER
  ADMIN
}

model User {
  id                 String               @id @default(uuid()) @db.Char(36)
  createdAt          DateTime             @default(now())
  mail               String               @unique
  password           String
  role               UserRole             @default(COMPETITOR)
  Person             Person               @relation(fields: [personId], references: [id])
  personId           String               @unique @db.Char(36)
  CompetitionTimer   CompetitionTimer[]
  OrganizationMember OrganizationMember[]
}

model Organization {
  id                 String               @id @default(uuid()) @db.Char(36)
  name               String               @unique
  createdAt          DateTime             @default(now())
  country            String
  city               String
  street             String?
  zipCode            String
  bankAccountNumber  String               @unique
  tin                String               @unique // equivalent of NIP in Poland
  description        String?              @db.VarChar(1000)
  Competitions       Competition[]
  OrganizationMember OrganizationMember[]
}

model OrganizationMember {
  organizationId String       @db.Char(36)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  userId         String       @db.Char(36)
  User           User         @relation(fields: [userId], references: [id])

  @@id([organizationId, userId])
}

model Competition {
  id               String             @id @default(uuid()) @db.Char(36)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  country          String
  place            String
  active           Boolean            @default(true)
  visible          Boolean            @default(true)
  dateFrom         DateTime           @db.Date
  dateTo           DateTime?          @db.Date
  description      String             @db.VarChar(1000)
  statutePath      String
  Disciplines      Discipline[]
  Organization     Organization       @relation(fields: [organizationId], references: [id])
  organizationId   String             @db.Char(36)
  CompetitionTimer CompetitionTimer[]

  @@unique([dateFrom, name, place])
}

model CompetitionTimer {
  competitionId String      @db.Char(36)
  Competition   Competition @relation(fields: [competitionId], references: [id])
  userId        String      @db.Char(36)
  User          User        @relation(fields: [userId], references: [id])
  agreed        Boolean?

  @@id([competitionId, userId])
}

model Discipline {
  id            String        @id @default(uuid()) @db.Char(36)
  name          String
  distance      Int?          @db.UnsignedSmallInt
  price         Int?          @db.UnsignedSmallInt
  currency      String?       @db.Char(3)
  Competition   Competition   @relation(fields: [competitionId], references: [id])
  competitionId String        @db.Char(36)
  Participant   Participant[]
}

model Participant {
  id           String     @id @default(uuid()) @db.Char(36)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  club         String?
  team         String?
  paid         Boolean    @default(false)
  Person       Person     @relation(fields: [personId], references: [id])
  personId     String     @db.Char(36)
  Discipline   Discipline @relation(fields: [disciplineId], references: [id])
  disciplineId String     @db.Char(36)
}
