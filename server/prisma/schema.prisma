// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model Person {
  id          String        @id @default(uuid()) @db.Char(36)
  firstName   String
  lastName    String
  gender      Gender
  dateOfBirth DateTime      @db.Date
  country     String
  city        String
  zipCode     String
  phone       String
  mail        String
  User        User?
  Participant Participant[]
}

enum UserRole {
  COMPETITOR
  ORGANIZER
  TIMER
  ADMIN
}

model User {
  id                 String               @id @default(uuid()) @db.Char(36)
  createdAt          DateTime             @default(now())
  mail               String               @unique
  password           String
  role               UserRole             @default(COMPETITOR)
  Person             Person               @relation(fields: [personId], references: [id])
  personId           String               @unique @db.Char(36)
  CompetitionTimer   CompetitionTimer[]
  OrganizationMember OrganizationMember[]
}

model Organization {
  id                 String               @id @default(uuid()) @db.Char(36)
  name               String               @unique
  createdAt          DateTime             @default(now())
  country            String
  city               String
  street             String?
  zipCode            String
  bankAccountNumber  String               @unique
  tin                String               @unique // equivalent of NIP in Poland
  description        String?              @db.VarChar(1000)
  Competitions       Competition[]
  OrganizationMember OrganizationMember[]
}

model OrganizationMember {
  organizationId String       @db.Char(36)
  Organization   Organization @relation(fields: [organizationId], references: [id])
  userId         String       @db.Char(36)
  User           User         @relation(fields: [userId], references: [id])

  @@id([organizationId, userId])
}

model Competition {
  id               String             @id @default(uuid()) @db.Char(36)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  country          String
  place            String
  active           Boolean
  hidden           Boolean?
  dateFrom         DateTime           @db.Date
  dateTo           DateTime?          @db.Date
  description      String             @db.VarChar(1000)
  statutePath      String
  Disciplines      Discipline[]
  Organization     Organization       @relation(fields: [organizationId], references: [id])
  organizationId   String             @db.Char(36)
  CompetitionTimer CompetitionTimer[]
}

model CompetitionTimer {
  competitionId String      @db.Char(36)
  Competition   Competition @relation(fields: [competitionId], references: [id])
  userId        String      @db.Char(36)
  User          User        @relation(fields: [userId], references: [id])
  agreed        Boolean?

  @@id([competitionId, userId])
}

model Discipline {
  id            String        @id @default(uuid()) @db.Char(36)
  name          String
  distance      Int?          @db.UnsignedSmallInt
  price         Int?          @db.UnsignedSmallInt
  currency      CurrencyCode?
  Competition   Competition   @relation(fields: [competitionId], references: [id])
  competitionId String        @db.Char(36)
  Participant   Participant[]
}

model Participant {
  id           String     @id @default(uuid()) @db.Char(36)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  club         String?
  team         String?
  paid         Boolean    @default(false)
  Person       Person     @relation(fields: [personId], references: [id])
  personId     String     @db.Char(36)
  Discipline   Discipline @relation(fields: [disciplineId], references: [id])
  disciplineId String     @db.Char(36)
}

enum CurrencyCode {
  AFN
  EUR
  ALL
  DZD
  USD
  AOA
  XCD
  ARS
  AMD
  AWG
  AUD
  AZN
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  XOF
  BMD
  INR
  BTN
  BOB
  BOV
  BAM
  BWP
  NOK
  BRL
  BND
  BGN
  BIF
  CVE
  KHR
  XAF
  CAD
  KYD
  CLP
  CLF
  CNY
  COP
  COU
  KMF
  CDF
  NZD
  CRC
  HRK
  CUP
  CUC
  ANG
  CZK
  DKK
  DJF
  DOP
  EGP
  SVC
  ERN
  SZL
  ETB
  FKP
  FJD
  XPF
  GMD
  GEL
  GHS
  GIP
  GTQ
  GBP
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  IDR
  XDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KPW
  KRW
  KWD
  KGS
  LAK
  LBP
  LSL
  ZAR
  LRD
  LYD
  CHF
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  MRU
  MUR
  XUA
  MXN
  MXV
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  NIO
  NGN
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RON
  RUB
  RWF
  SHP
  WST
  STN
  SAR
  RSD
  SCR
  SLL
  SGD
  XSU
  SBD
  SOS
  SSP
  LKR
  SDG
  SRD
  SEK
  CHE
  CHW
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TRY
  TMT
  UGX
  UAH
  AED
  USN
  UYU
  UYI
  UYW
  UZS
  VUV
  VES
  VND
  YER
  ZMW
  ZWL
  XBA
  XBB
  XBC
  XBD
  XTS
  XXX
  XAU
  XPD
  XPT
  XAG
  AFA
  FIM
  ALK
  ADP
  ESP
  FRF
  AOK
  AON
  AOR
  ARA
  ARP
  ARY
  RUR
  ATS
  AYM
  AZM
  BYB
  BYR
  BEC
  BEF
  BEL
  BOP
  BAD
  BRB
  BRC
  BRE
  BRN
  BRR
  BGJ
  BGK
  BGL
  BUK
  HRD
  CYP
  CSJ
  CSK
  ECS
  ECV
  GQE
  EEK
  XEU
  GEK
  DDM
  DEM
  GHC
  GHP
  GRD
  GNE
  GNS
  GWE
  GWP
  ITL
  ISJ
  IEP
  ILP
  ILR
  LAJ
  LVL
  LVR
  LSM
  ZAL
  LTL
  LTT
  LUC
  LUF
  LUL
  MGF
  MVQ
  MLF
  MTL
  MTP
  MRO
  MXP
  MZE
  MZM
  NLG
  NIC
  PEH
  PEI
  PES
  PLZ
  PTE
  ROK
  ROL
  STD
  CSD
  SKK
  SIT
  RHD
  ESA
  ESB
  SDD
  SDP
  SRG
  CHC
  TJR
  TPE
  TRL
  TMM
  UGS
  UGW
  UAK
  SUR
  USS
  UYN
  UYP
  VEB
  VEF
  VNC
  YDD
  YUD
  YUM
  YUN
  ZRN
  ZRZ
  ZMK
  ZWC
  ZWD
  ZWN
  ZWR
  XFO
  XRE
  XFU
}
